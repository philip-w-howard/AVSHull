Axis:
	X: left/right
	Y: Up/Down
	Z: along the keel

Hull
	contains vector of bulkheads
DisplayHull
	contains BaseHull
	vector of bulkheads
	vector of Chines
	Rotatable
	Editable
	Can return Geometry
HullControl
	Displays a DisplayHull

6-30-2021
	Bulkhead ops:
		Create (empty)
		Create (points)
		Create (copy + change chines)
		Create (HUL file)
    
		CheckTransomAngle (called after creating Hull from AVSH file)
		StraightenBulkhead (not implemented)
    
		ShiftBy (used to zero)
    
		GetGeometry (depends only on Points property)
    
		Clone
		UpdateWithMatrix (rotation and scaling)
		UpdateBulkheadPoint (move single point)
		MoveZ (deltaZ)
    
	Hull
		list of Bulkheads
		Timestamp
    
		Create (empty)
		Create (from Setup data)
		Create (LoadFromHullFile)
		SetBulkheadHandler (Automated)
		Scale
***		ChangeChines (change number of chines)
			Figure out UI. Temp: add to context menu
		CheckTransom (wrapper for Bulkhead function)
    
		Clone
    
	EditableHull
		SelectedBulkhead
		Create (from BaseHull)
		Rotate
		GetBulkheadGeometry
		GetChineGeometry
		GetSize
		UpdateBulkheadPoint (some translation from screen to hull coordinates)
		DeleteBulkhead
		InsertBulkhead
		ChangeChines
***			Undo doesn't always work
    
	HullControl
		Reference to EditableHull
		Update HullMouseLocation
		MeasureOverride
		ArrangeOverride
		OnRender
    
		BulkheadClicked
		HandleClicked
		OnPreviewMouseDown
		OnPreviewMouseUp
		OnPreviewMouseMove
    
		hull_PropertyChanged
		InsertClick
		DeleteClick
    
	DesignControl
		grid of HullControl's
		DoubleClick (set perspective view)
		RotateClick
		UpdateViews (simplify: only perspective should change)
		hull_PropertyChanged
		openClick
		saveClick
		importClick
		createClick
		ResizeClick
		Undo/Redo
 
 ****	Remember Perspective rotation when dropping handle in small windows
           OR: disallow editing in small windows.
TODO:
	
	Place pop-ups in center of parent. 
		See about box for sample
			<Window> WindowStartupLocation="CenterOwner"
			dlg.Owner = this;
		See CreateHullDialog as another example
			Set window (Left,Top) based on mouse position

		About (in center)
		CreateHull
		Open/Save/Import/Export
		Resize

	Check on notification settings.

	Check if Bulkhead(points, Type) is half hull or full hull.

	UI Standards:
		https://docs.microsoft.com/en-us/dotnet/desktop/wpf/windows/dialog-boxes-overview?view=netdesktop-5.0
	Create hull from scratch
		Do something other than straight lines for bulkheads

	Split: use actual arcs instead of simulated ones.

	For Insert Bulkhead: compute location of click relative to drawing. Using m_xform, m_geometry.
		compute X,Y,Z is done
	
	Dialog appearance
		PanelLayoutSettings
		gcode setup
	Dialog positioning
	Dialog data handling
	Settings
	Appearance based on styles
	Add bulkhead based on click
	Change number of chines UI
	Data validation (beyond red rectangle)
	Rotate perspective with mouse.

	Save vs. SaveAs
		can use undoLog.Count to determine if there are unsaved changes?

	Edit bulkhead dialog?

	Is PanelLayout separate app? Window? Tab?

	Panel Layout zoom
		relative to mouse

	Add version/Time to Hull.
	Object/Property for displaying text in bottom notification panel.
	Compute X,Y,Z in panel display
	Get timestamp of panels in panel layout
		Compare with that of Hull

	Refactor panel layout mess: MVVM: Preparing to merge panel tab handling
		panel: points for single panel
			shift, rotate, split
		PanelsLayoutSetup
			sheet size
			Sheet layout
			PanelLayoutSetup (window)
		PanelLayout
			Setup
			list of panels
		PanelLayoutControl
			Add visuals to Layout
		LayoutScroller
			ScrollViewer with a LayoutControl inside

		Check Notifications on panel hierarcy

	Add Undo/Redo to Layout

	Move Tools to toolbar inside tab
	Implement tool slide-out: Expander

		Design
			Resize
			Chines
			Bulkhead
				Allow Movement
				Insert
				Delete
    
		Panels
			Use GCode Setup as template
			Setup (sheet layout)
			GCode Setup
			Offset Setup
				Got pop-up working. Need to get data binding right.
			Panel Ops
				Rotate
				Duplicate
				Split
				Flip

	Make HullControl.IsEditable a property: Merging HullControl refactor Merging rotation change
		Based on perspective?
		Tie to editableHull property?
		Enable/Disable context menu based on property value.


